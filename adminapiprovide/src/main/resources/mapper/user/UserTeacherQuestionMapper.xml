<?xml version="1.0" encoding="UTF-8" ?>
<!--

       Copyright 2015-2016 the original author or authors.

       Licensed under the Apache License, Version 2.0 (the "License");
       you may not use this file except in compliance with the License.
       You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

       Unless required by applicable law or agreed to in writing, software
       distributed under the License is distributed on an "AS IS" BASIS,
       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       See the License for the specific language governing permissions and
       limitations under the License.

-->
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.com.myproject.user.mapper.UserTeacherQuestionMapper">
    <!--<cache type="org.mybatis.caches.redis.RedisCache" />-->
    <resultMap type="UserTeacherQuestion" id="resultMap">
        <id property="id" column="ID" jdbcType="INTEGER"/>
        <result column="user_teacher_question_id" property="userTeacherQuestionId" jdbcType="VARCHAR"/>
        <result column="user_id" property="userId" jdbcType="VARCHAR"/>
        <result column="teacher_id" property="teacherId" jdbcType="VARCHAR"/>
        <result column="question" property="question" jdbcType="TINYINT"/>
        <result column="create_time" property="createTime" jdbcType="BIGINT"/>
        <result column="status" property="status" jdbcType="VARCHAR"/>
        <result column="version" property="version" jdbcType="VARCHAR"/>
    </resultMap>
    <resultMap type="UserTeacherQuestion" id="questionAndReplyResultMap">
        <id property="id" column="ID" jdbcType="INTEGER"/>
        <result column="user_teacher_question_id" property="userTeacherQuestionId" jdbcType="VARCHAR"/>
        <result column="user_id" property="userId" jdbcType="VARCHAR"/>
        <result column="teacher_id" property="teacherId" jdbcType="VARCHAR"/>
        <result column="question" property="question" jdbcType="TINYINT"/>
        <result column="create_time" property="createTime" jdbcType="BIGINT"/>
        <result column="create_time" property="questionTime" jdbcType="BIGINT"/>
        <result column="status" property="status" jdbcType="VARCHAR"/>
        <result column="version" property="version" jdbcType="VARCHAR"/>
        <result column="photo" property="photo" jdbcType="VARCHAR"/>
        <result column="user_name" property="userName" jdbcType="VARCHAR"/>
        <result column="real_name" property="realName" jdbcType="VARCHAR"/>
        <result column="login_name" property="loginName" jdbcType="VARCHAR"/>
        <result column="nick_name" property="nickName" jdbcType="VARCHAR"/>
        <result column="signature" property="signature" jdbcType="VARCHAR"/>
        <result column="user_identity" property="userIdentity" jdbcType="VARCHAR"/>
        <collection property="replyList" select="getUserTeacherQuestionReplyById" column="{userTeacherQuestionId=user_teacher_question_id}" ofType="UserTeacherQuestionReply"/>
    </resultMap>

    <resultMap type="UserTeacherQuestionReply" id="questionReplyResultMap">
        <id property="id" column="ID" jdbcType="INTEGER"/>
        <result column="user_teacher_question_reply_id" property="userTeacherQuestionReplyId" jdbcType="VARCHAR"/>
        <result column="user_teacher_question_id" property="userTeacherQuestionId" jdbcType="VARCHAR"/>
        <result column="user_id" property="userId" jdbcType="VARCHAR"/>
        <result column="teacher_id" property="teacherId" jdbcType="VARCHAR"/>
        <result column="reply" property="reply" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="BIGINT"/>
        <result column="create_time" property="replyTime" jdbcType="BIGINT"/>
        <result column="status" property="status" jdbcType="VARCHAR"/>
        <result column="version" property="version" jdbcType="VARCHAR"/>
        <result column="photo" property="photo" jdbcType="VARCHAR"/>
        <result column="rectangle_photo" property="rectanglePhoto" jdbcType="VARCHAR"/>
        <result column="user_name" property="userName" jdbcType="VARCHAR"/>
        <result column="real_name" property="realName" jdbcType="VARCHAR"/>
        <result column="login_name" property="loginName" jdbcType="VARCHAR"/>
        <result column="nick_name" property="nickName" jdbcType="VARCHAR"/>
        <result column="signature" property="signature" jdbcType="VARCHAR"/>
        <result column="user_identity" property="userIdentity" jdbcType="VARCHAR"/>
    </resultMap>
    <select id="getUserTeacherQuestionList" parameterType="UserTeacherQuestion" resultMap="resultMap">
        select *  from user_teacher_question where 1=1
        <if test="userId != null and userId !='' ">
            and user_id=#{userId}
        </if>
        <if test="teacherId != null and teacherId !='' ">
            and teacher_id =#{teacherId}
        </if>
        and status = 1
    </select>

    <select id="getUserTeacherQuestionAndReplyList"   resultMap="questionAndReplyResultMap">
        SELECT q.id,
                q.user_teacher_question_id,
                q.user_id,
                q.teacher_id,
                q.question,
                q.create_time,
                q.status,
                q.version,
                u.`photo`,
                u.`rectangle_photo`,
                u.`user_name`,
                u.`real_name`,
                u.`login_name`,
                u.`nick_name`,
                u.`signature` ,
                u.`user_identity`
                FROM user_teacher_question q
                LEFT JOIN user u ON u.`user_id`  = q.`user_id`
        WHERE 1=1
        <if test="userId != null and userId !='' ">
            and q.user_id=#{userId}
        </if>
        <if test="teacherId != null and teacherId !='' ">
            and q.teacher_id =#{teacherId}
        </if>
        and q.status = 1
        order by q.create_time asc
    </select>
    <select id="getUserTeacherQuestionReplyById" parameterType="UserTeacherQuestionReply" resultMap="questionReplyResultMap">
      SELECT
          r.`id`,
          r.`create_time`,
          r.`reply`,
          r.`status`,
          r.`teacher_id`,
          r.`user_teacher_question_id`,
          r.`user_teacher_question_reply_id`,
          r.`version` ,
          u.`photo`,
          u.`rectangle_photo`,
          u.`user_name`,
          u.`real_name`,
          u.`login_name`,
          u.`nick_name`,
          u.`signature` ,
          u.`user_identity`
       FROM
           user_teacher_question_reply r
           LEFT JOIN user u
            ON u.`user_id` = r.`teacher_id`
          where   r.user_teacher_question_id=#{userTeacherQuestionId}  and r.status = 1
    </select>
    <select id="getUserTeacherQuestion" parameterType="UserTeacherQuestion" resultMap="resultMap">
        select * from user_teacher_question where 1=1
        <if test="userId != null and userId !='' ">
          and user_id=#{userId}
        </if>
        <if test="teacherId != null and teacherId !='' ">
            and teacher_id =#{teacherId}
        </if>
        and status = 1
    </select>

    <insert id="insertUserTeacherQuestion" parameterType="UserTeacherQuestion">
        insert into user_teacher_question(
        user_teacher_question_id,
        user_id,
        teacher_id,
        question,
        create_time,
        status,version)
        values(#{userTeacherQuestionId},
                #{userId},
                #{teacherId},
                #{question},
                #{createTime},
                #{status},
                #{version})
    </insert>
    <update id="updateUserTeacherQuestion" parameterType="UserTeacherQuestion">
        update user_teacher_question set question=#{question} where  teacher_id=#{teacherId} and user_id=#{userId}
    </update>
    <sql id="questionAndReplys">
         q.user_teacher_question_id,
          q.`question`,
          q.`user_id`,
          q.`teacher_id`,
          q.`create_time`,
          u.`photo`,
          u.`rectangle_photo`,
          u.`user_name`,
          u.`real_name`,
          u.`login_name`,
          u.`nick_name`,
          u.`signature`,
          u.`user_identity`
    </sql>

    <!--我的问答列表-->
    <select id="myQuestionsList" parameterType="java.lang.String" resultMap="questionAndReplyResultMap">
        SELECT
         <include refid="questionAndReplys"/>
        FROM
           user_teacher_question q
          LEFT JOIN user u
            ON u.`user_id` = q.`user_id`
        WHERE q.user_id = #{userId}
        ORDER BY q.create_time DESC
    </select>
    <!--他人提问列表-->
    <select id="otherQuestionsList" parameterType="java.lang.String" resultMap="questionAndReplyResultMap">
        SELECT
        <include refid="questionAndReplys"/>
        FROM
        user_teacher_question q
        LEFT JOIN user u
        ON u.`user_id` = q.`user_id`
        WHERE q.teacher_id = #{teacherId}
        ORDER BY q.create_time DESC
    </select>
</mapper>