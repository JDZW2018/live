<?xml version="1.0" encoding="UTF-8" ?>
<!--

       Copyright 2015-2016 the original author or authors.

       Licensed under the Apache License, Version 2.0 (the "License");
       you may not use this file except in compliance with the License.
       You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

       Unless required by applicable law or agreed to in writing, software
       distributed under the License is distributed on an "AS IS" BASIS,
       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       See the License for the specific language governing permissions and
       limitations under the License.

-->
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.com.myproject.user.mapper.UserTeacherFocusMapper">
    <!--<cache type="org.mybatis.caches.redis.RedisCache" />-->
    <resultMap type="UserTeacherFocus" id="resultMap">
        <id property="id" column="ID" jdbcType="INTEGER"/>
        <result column="user_teacher_focus_id" property="userTeacherFocusId" jdbcType="VARCHAR"/>
        <result column="user_id" property="userId" jdbcType="VARCHAR"/>
        <result column="teacher_id" property="teacherId" jdbcType="VARCHAR"/>
        <result column="is_focus" property="isFocus" jdbcType="TINYINT"/>
        <result column="create_time" property="createTime" jdbcType="BIGINT"/>
        <result column="status" property="status" jdbcType="VARCHAR"/>
        <result column="version" property="version" jdbcType="VARCHAR"/>
        <result column="real_name" property="realName" jdbcType="VARCHAR"/>
        <result column="user_type" property="userType" jdbcType="INTEGER"/>
        <result column="signature" property="signature" jdbcType="VARCHAR"/>
        <result column="photo" property="photo" jdbcType="VARCHAR"/>
        <result column="user_identity" property="userIdentity" jdbcType="VARCHAR"/>
    </resultMap>

    <select id="getUserTeacherFocusList" parameterType="UserTeacherFocus" resultMap="resultMap">
        select * from user_teacher_focus where 1=1
        <if test="userId != null and userId !='' ">
            and user_id=#{userId}
        </if>
        <if test="teacherId != null and teacherId !='' ">
            and teacher_id =#{teacherId}
        </if>
        <if test="isFocus != null and isFocus !='' or isFocus == 0 ">
            and is_focus =#{isFocus}
        </if>
        and status = 1
    </select>

    <select id="getUserTeacherFocus" parameterType="UserTeacherFocus" resultMap="resultMap">
        select * from user_teacher_focus where 1=1
        <if test="userId != null and userId !='' ">
          and user_id=#{userId}
        </if>
        <if test="teacherId != null and teacherId !='' ">
            and teacher_id =#{teacherId}
        </if>
        and status = 1
    </select>

    <insert id="insertUserFocus" parameterType="UserTeacherFocus">
        insert into user_teacher_focus(
        user_teacher_focus_id,
        user_id,teacher_id,
        is_focus,create_time,
        status,version)
        values(#{userTeacherFocusId},
                #{userId},
                #{teacherId},
                #{isFocus},
                #{createTime},
                #{status},
                #{version})
    </insert>
    <update id="updateUserFocusStatus" parameterType="UserTeacherFocus">
        update user_teacher_focus set is_focus=#{isFocus} where  teacher_id=#{teacherId} and user_id=#{userId}
    </update>

    <!--查询我关注的老师-->
    <select id="selectMyFocusTeachers" resultMap="resultMap" >
        SELECT
          focus.`teacher_id`,
          focus.`user_id`,
          (SELECT user_type FROM user WHERE  user_id = focus.teacher_id)AS user_type,
          (SELECT IFNULL(real_name,login_name)  FROM user WHERE  user_id = focus.teacher_id)AS real_name,
          (SELECT signature FROM user WHERE  user_id = focus.teacher_id)AS signature,
          (SELECT photo FROM user WHERE  user_id = focus.teacher_id)AS photo,
          (SELECT user_identity FROM user WHERE  user_id = focus.user_id)AS user_identity
        FROM
          user_teacher_focus focus
        WHERE focus.user_id = #{userId}
          AND focus.is_focus = 1
          AND focus.STATUS = 1
 </select>

 <!--查询关注我的用户-->
    <select id="selectFocusMeUsers" resultMap="resultMap" >
      SELECT
          focus.`teacher_id`,
          focus.`user_id`,
          (SELECT user_type FROM user WHERE  user_id = focus.user_id)AS user_type,
          (SELECT IFNULL(real_name,login_name)  FROM user WHERE  user_id = focus.user_id)AS real_name,
          (SELECT signature FROM user WHERE  user_id = focus.user_id)AS signature,
          (SELECT photo FROM user WHERE  user_id = focus.user_id)AS photo,
          (SELECT user_identity FROM user WHERE  user_id = focus.user_id)AS user_identity
          FROM
          user_teacher_focus focus
        WHERE focus.teacher_id =  #{userId}
          AND focus.is_focus = 1
          AND focus.STATUS = 1
</select>
<!-- 如果用户被删除了，同时删除关注我的，和我关注的数据-->
    <delete id="deleteFocusMeAndMyFocus" parameterType="java.lang.String">
        delete from user_teacher_focus where user_id =#{userId} or teacher_id = #{userId}
    </delete>

</mapper>