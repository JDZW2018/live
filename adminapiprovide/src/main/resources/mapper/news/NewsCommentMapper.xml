<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.com.myproject.news.mapper.NewsCommentMapper">
    <resultMap type="NewsComment" id="resultMap">

        <result column="id" property="id"  jdbcType="INTEGER" />
        <result column="status" property="status" jdbcType="INTEGER" />
        <result column="version" property="version" jdbcType="INTEGER" />
        <result column="create_time" property="createTime" jdbcType="BIGINT" />
        <result column="newsName" property="newsName" jdbcType="VARCHAR"/>
        <result column="newsUsername" property="newsUsername" jdbcType="VARCHAR"/>
        <result column="newsContent" property="newsContent" jdbcType="VARCHAR"/>
        <result column="news_comment_id" property="newsCommentId" jdbcType="VARCHAR"/>
        <result column="comment_time" property="commentTime" jdbcType="BIGINT"/>
        <result column="news_id" property="newsId" jdbcType="VARCHAR"/>
        <result column="user_id" property="userId" jdbcType="VARCHAR"/>
        <result column="userIdentity" property="userIdentity" jdbcType="INTEGER"/>
        <result column="photo" property="photo" jdbcType="VARCHAR"/>
        <result column="signature" property="signature" jdbcType="VARCHAR"/>
        <result column="reply_content" property="replyContent" jdbcType="VARCHAR"/>
        <result column="reply_time" property="replyTime" jdbcType="BIGINT"/>
    </resultMap>

    <resultMap id="NewsCommentVOMap" type="cn.com.myproject.user.entity.VO.NewsCommentVO">
        <result column="newsCommentId" property="newsCommentId" jdbcType="VARCHAR"/>
        <result column="newsId" property="newsId" jdbcType="VARCHAR"/>
        <result column="newsContent" property="newsContent" jdbcType="VARCHAR"/>
        <result column="userId" property="userId" jdbcType="VARCHAR"/>
        <result column="commentTime" property="commentTime" jdbcType="BIGINT"/>
        <result column="realName" property="realName" jdbcType="VARCHAR"/>
        <result column="userIdentity" property="userIdentity" jdbcType="VARCHAR"/>
        <result column="photo" property="photo" jdbcType="VARCHAR"/>
        <result column="signature" property="signature" jdbcType="VARCHAR"/>
    </resultMap>

    <resultMap type="NewsCollect" id="ncMap">
        <result column="collect_id" property="collectId" jdbcType="VARCHAR" />
        <result column="news_id" property="newsId" jdbcType="VARCHAR" />
        <result column="user_id" property="userId" jdbcType="VARCHAR" />
        <result column="iscollect" property="iscollect" jdbcType="SMALLINT" />
    </resultMap>


    <resultMap id="ccMap" type="cn.com.myproject.user.entity.VO.NewsCommentVO">
        <result column="news_comment_id" property="newsCommentId" jdbcType="VARCHAR"/>
        <result column="news_id" property="newsId" jdbcType="VARCHAR"/>
        <result column="newsContent" property="newsContent" jdbcType="VARCHAR"/>
        <result column="user_id" property="userId" jdbcType="VARCHAR"/>
        <result column="commentTime" property="commentTime" jdbcType="BIGINT"/>
        <result column="version" property="version" jdbcType="INTEGER"/>
        <result column="status" property="status" jdbcType="SMALLINT"/>
        <result column="newsName" property="newsName" jdbcType="VARCHAR"/>
        <result column="newsUsername" property="newsUsername" jdbcType="VARCHAR"/>
    </resultMap>

   <resultMap id="newsReplyMap" type="NewsReply">
        <id property="id" column="id" jdbcType="INTEGER" />
        <result column="reply_id" property="replyId" jdbcType="VARCHAR"></result>
        <result column="reply_content" property="replyContent" jdbcType="VARCHAR"/>
        <result column="replyTime" property="replyTime" jdbcType="BIGINT"/>
        <result column="Reply_username" property="userName" jdbcType="VARCHAR"/>
       <result column="reply_user_id" property="replyUserId" jdbcType="VARCHAR"/>
       <result column="create_time" property="createTime" jdbcType="BIGINT"></result>
        <result column="version" property="version" jdbcType="INTEGER"></result>
        <result column="status" property="status" jdbcType="INTEGER"></result>
    </resultMap>

    <resultMap id="crMap" type="cn.com.myproject.user.entity.VO.NewsReplyVO">
      <result column="newsCommentId" property="newsCommentId" jdbcType="VARCHAR"/>
        <result column="replyContent" property="replyContent" jdbcType="VARCHAR"/>
        <result column="replyUserId" property="replyUserId" jdbcType="VARCHAR"/>
        <result column="replyUserName" property="replyUserName" jdbcType="VARCHAR"/>
        <result column="replyTime" property="replyTime" jdbcType="BIGINT"/>
    </resultMap>



    <select id="getAll"  resultMap="resultMap">
        select *  from news_comment
   </select>

    <delete id="delNewsComment" parameterType="Integer">
        delete from news_comment where id = #{id}
    </delete>
    <select id="selectById"  resultMap="resultMap" parameterType="java.lang.String">
        select id,newsName ,newsUsername ,newsContent , create_time from news_comment  where id = #{id}
    </select>
    <insert id="addNewsComment" parameterType="NewsComment">
        insert into news_comment( newsName, newsUsername,  newsContent,create_time, version, status )
        values( #{newsName}, #{newsUsername}, #{newsContent}, #{create_time},#{version} ,#{status})
    </insert>

    <select id="getById" parameterType="Integer"  resultType="NewsComment" >
        SELECT  id,newsName ,newsUsername ,newsContent,create_time,version,status,comment_time,news_comment_id from news_comment where id=#{id}
    </select>

    <insert id="addReply"  parameterType="NewsComment">
      insert into news_reply(news_comment_id,reply_id,reply_content,user_id,news_id,user_name, create_time,version,status,reply_time) VALUES
      (#{newsCommentId},#{replyId},#{replyContent},#{userId}, #{newsId}, #{userName}, #{createTime}, #{version}, #{status},#{replyTime})
    </insert>


    <select id="selectReply" resultMap="crMap">
      select * from news_reply where reply_id = #{replyId}
    </select>

   <update id="updateNumber" parameterType="PointRecord">
       UPDATE  agree1
     <trim prefix="set" suffixOverrides=",">
         <if test="agree_id!=null" >totalAgree=#{totalAgree}+1,</if>
         <if test=" disagree_id!=null">totalDisagree=#{totalDisagree}+1,</if>
     </trim>
       where user_id=#{userId}and news_id=#{newsId}
   </update>

    <select id="getPage" resultMap="resultMap">
        select t1.id,t1.news_comment_id,t1.news_id,t1.comment_content,t1.user_id,t1.comment_time,t2.news_name cctitle,t3.user_name accname
        from news_comment t1 inner join information t2 on t1.news_id = t2.news_id inner join `user` t3 on t1.user_id = t3.user_id  order by t1.comment_time desc
    </select>

    <select id="findById" resultMap="resultMap" parameterType="String">
           select t3.replay_content hcontent,replay_time htime,t1.id,t1.news_comment_id,t1.news_id,t1.comment_content,t1.user_id,t1.comment_time,t2.user_name accname
          from news_comment t1
          left join `user` t2 on t1.user_id = t2.user_id left join news_reply t3 on t1.news_comment_id = t3.news_comment_id
          where t1.news_comment_id = #{commid}
    </select>
<delete id ="delcomm" parameterType="String">
delete  FROM  news_comment where news_comment_id=#{newsCommentId}
</delete>
<insert id="addcomm" parameterType="NewsComment">
    insert INTO news_comment (news_comment_id,news_id,newsContent,user_id,comment_time)values
    (#{newsCommentId},#{newsId},#{newsContent},#{userId},#{commentTime})
</insert>
 <select id="checkcomm" resultType="Integer" parameterType="NewsComment">
     SELECT COUNT (t1.news_comment_id)FROM  news_comment t1 where t1.user_id=#{userId}and t1.news_id=#{newsId}
 </select>

    <select id="searchCcList" resultMap="resultMap">
        select u.user_name as newsUsername,
        u.photo as photo,
        u.signature as signature,
        u.user_identity as userIdentity,
        nc.newsContent,
        nc.create_time,
        nc.news_id,
        nc.news_comment_id
        from news_comment nc
        left join user u on u.user_id = nc.user_id
        where nc.news_id  = #{newsId} order by nc.create_time desc
    </select>

    <select id="searchReplayList" resultMap="crMap">

    </select>



    <select id="searcUserNewCollect" resultMap="ncMap" parameterType="java.lang.String">
        select cc.collect_id, cc.news_id,cc.user_id,cc.iscollect from news_collect cc where cc.user_id = #{userId} and cc.news_id=#{newsId}
    </select>

    <insert id="insertCn" parameterType="NewsCollect">
        insert into news_collect(collect_id,news_id,user_id,iscollect) values(#{collectId},#{newsId},#{userId},#{iscollect})
    </insert>


    <delete id="deleteCn" parameterType="NewsCollect">
        delete from news_collect where news_id = #{newsId} and user_id = #{userId}
    </delete>

    <select id="searchCcList1" resultMap="ccMap">
        select
        cc.news_comment_id as newsCommentId,
        cc.news_id as newsId,
        cc.news_content as newsContent,
        cc.user_id as userId,
        cc.comment_time as commentTime,
        u.user_name as accname,
        from news_comment cc
        left join user u on u.user_id = cc.user_id
        where cc.news_id = #{newsId} order by cc.comment_time desc
    </select>

    <select id="searchCrList" resultMap="crMap">
        select '管理员' as replyUserName,<!--暂时这样写，默认为管理员进行回复，以后修改表结构时进行优化-->
        cr.reply_content as replyContent,
        cr.reply_time as replyTime
        from news_comment cr
        where cr.news_comment_id = #{newscommentId} order by cr.reply_time DESC
    </select>


    <update id="updatecollect"  parameterType="NewsCollect" >
        UPDATE news_collect set iscollect=#{iscollect} where user_id=#{userId} and news_id =#{newsId}
    </update>

    <insert id="addComm1" parameterType="NewsComment">
        insert INTO news_comment (news_comment_id,news_id,newsContent,user_id,create_time)values
        (#{newsCommentId},#{newsId},#{newsContent},#{userId},#{createTime})
    </insert>

    <update id="updateCommentContent" parameterType="NewsComment">
      update news_comment set reply_content = #{replyContent}, reply_time = #{replyTime} where id = #{id}
    </update>
</mapper>